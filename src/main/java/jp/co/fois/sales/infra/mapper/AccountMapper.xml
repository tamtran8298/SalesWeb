<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jp.co.fois.sales.infra.mapper.AccountMapper">
  <resultMap id="BaseResultMap" type="jp.co.fois.sales.domain.entity.Account">
    <id column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="EMP_NO" jdbcType="VARCHAR" property="empNo" />
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
    <result column="PASSWORD" jdbcType="VARCHAR" property="password" />
    <result column="ACCOUNT_LOCK" jdbcType="BOOLEAN" property="accountLock" />
    <result column="ROLE" jdbcType="VARCHAR" property="role" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="CREATE_USER" jdbcType="VARCHAR" property="createUser" />
    <result column="UPDATE_USER" jdbcType="VARCHAR" property="updateUser" />
    <result column="base" jdbcType="VARCHAR" property="base" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    EMAIL, EMP_NO, USER_NAME, base, PASSWORD, ACCOUNT_LOCK, ROLE, CREATE_TIME, UPDATE_TIME, 
    CREATE_USER, UPDATE_USER
  </sql>
  <select id="selectByExample" parameterType="jp.co.fois.sales.domain.entity.AccountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from SCHEMA01.ACCOUNT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from SCHEMA01.ACCOUNT
    where EMAIL = #{email,jdbcType=VARCHAR}
  </select>
  <select id="selectAccountNameList" resultType="string">
    select 
      USER_NAME
    from SCHEMA01.ACCOUNT
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from SCHEMA01.ACCOUNT
    where EMAIL = #{email,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="jp.co.fois.sales.domain.entity.AccountExample">
    delete from SCHEMA01.ACCOUNT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="jp.co.fois.sales.domain.entity.Account">
    insert into SCHEMA01.ACCOUNT (EMAIL, EMP_NO, base,USER_NAME, 
      PASSWORD, ACCOUNT_LOCK, ROLE, 
      CREATE_TIME, UPDATE_TIME, CREATE_USER, 
      UPDATE_USER)
    values (#{email,jdbcType=VARCHAR}, #{empNo,jdbcType=VARCHAR}, #{base,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{accountLock,jdbcType=BOOLEAN}, #{role,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, 
      #{updateUser,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="jp.co.fois.sales.domain.entity.Account">
    insert into SCHEMA01.ACCOUNT
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="email != null">
        EMAIL,
      </if>
      <if test="empNo != null">
        EMP_NO,
      </if>
      <if test="base != null">
        base,
      </if>
      <if test="userName != null">
        USER_NAME,
      </if>
      <if test="password != null">
        PASSWORD,
      </if>
      <if test="accountLock != null">
        ACCOUNT_LOCK,
      </if>
      <if test="role != null">
        ROLE,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="createUser != null">
        CREATE_USER,
      </if>
      <if test="updateUser != null">
        UPDATE_USER,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="empNo != null">
        #{empNo,jdbcType=VARCHAR},
      </if>
      <if test="base != null">
        #{base,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="accountLock != null">
        #{accountLock,jdbcType=BOOLEAN},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="jp.co.fois.sales.domain.entity.AccountExample" resultType="java.lang.Long">
    select count(*) from SCHEMA01.ACCOUNT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update SCHEMA01.ACCOUNT
    <set>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.empNo != null">
        EMP_NO = #{record.empNo,jdbcType=VARCHAR},
      </if>
      <if test="record.base != null">
        base = #{record.base,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        USER_NAME = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        PASSWORD = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.accountLock != null">
        ACCOUNT_LOCK = #{record.accountLock,jdbcType=BOOLEAN},
      </if>
      <if test="record.role != null">
        ROLE = #{record.role,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUser != null">
        UPDATE_USER = #{record.updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update SCHEMA01.ACCOUNT
    set EMAIL = #{record.email,jdbcType=VARCHAR},
      EMP_NO = #{record.empNo,jdbcType=VARCHAR},
      base = #{record.base,jdbcType=VARCHAR},
      USER_NAME = #{record.userName,jdbcType=VARCHAR},
      PASSWORD = #{record.password,jdbcType=VARCHAR},
      ACCOUNT_LOCK = #{record.accountLock,jdbcType=BOOLEAN},
      ROLE = #{record.role,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      CREATE_USER = #{record.createUser,jdbcType=VARCHAR},
      UPDATE_USER = #{record.updateUser,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="jp.co.fois.sales.domain.entity.Account">
    update SCHEMA01.ACCOUNT
    <set>
      <if test="empNo != null">
        EMP_NO = #{empNo,jdbcType=VARCHAR},
      </if>
      <if test="base != null">
        base = #{base,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="accountLock != null">
        ACCOUNT_LOCK = #{accountLock,jdbcType=BOOLEAN},
      </if>
      <if test="role != null">
        ROLE = #{role,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        CREATE_USER = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        UPDATE_USER = #{updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    where EMAIL = #{email,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="jp.co.fois.sales.domain.entity.Account">
    update SCHEMA01.ACCOUNT
    set EMP_NO = #{empNo,jdbcType=VARCHAR},
      base = #{base,jdbcType=VARCHAR},
      USER_NAME = #{userName,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      ACCOUNT_LOCK = #{accountLock,jdbcType=BOOLEAN},
      ROLE = #{role,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      CREATE_USER = #{createUser,jdbcType=VARCHAR},
      UPDATE_USER = #{updateUser,jdbcType=VARCHAR}
    where EMAIL = #{email,jdbcType=VARCHAR}
  </update>
</mapper>